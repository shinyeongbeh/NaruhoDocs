{
  "name": "naruhodocs",
  "displayName": "NaruhoDocs",
  "description": "A VSCode extension that could help in documentation writing and reading. ",
  "version": "0.0.1",
  "engines": {
    "vscode": "^1.103.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onView:naruhodocs.chatView",
    "onLanguage:markdown",
    "onLanguage:plaintext"
  ],
  "main": "./dist/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "naruhodocs.start",
        "title": "Start NaruhoDocs"
      },
      {
        "command": "naruhodocs.createFile",
        "title": "Create File (NaruhoDocs)"
      },
      {
        "command": "naruhodocs.configureLLM",
        "title": "Configure LLM Provider",
        "category": "NaruhoDocs"
      },
      {
        "command": "naruhodocs.testLLMConnection",
        "title": "Test LLM Connection",
        "category": "NaruhoDocs"
      },
      {
        "command": "naruhodocs.selectLocalModel",
        "title": "Select Local Model",
        "category": "NaruhoDocs"
      },
      {
        "command": "naruhodocs.showProviderStatus",
        "title": "Show Provider Status",
        "category": "NaruhoDocs"
      }
    ],
    "configuration": {
      "title": "NaruhoDocs",
      "properties": {
        "naruhodocs.llm.provider": {
          "type": "string",
          "enum": [
            "ootb",
            "byok",
            "local"
          ],
          "enumDescriptions": [
            "Out-of-the-box: Use built-in Gemini with daily limits",
            "Bring Your Own Key: Use your own API key for unlimited access",
            "Local LLM: Use local models via Ollama or similar"
          ],
          "default": "ootb",
          "description": "LLM provider option to use"
        },
        "naruhodocs.llm.apiKey": {
          "type": "string",
          "default": "",
          "description": "API key for BYOK mode (stored securely)",
          "when": "config.naruhodocs.llm.provider == 'byok'"
        },
        "naruhodocs.llm.localBackend": {
          "type": "string",
          "enum": [
            "ollama",
            "lmstudio",
            "llamacpp",
            "textgen",
            "custom"
          ],
          "enumDescriptions": [
            "Ollama - Easy model management with built-in API",
            "LM Studio - User-friendly GUI with OpenAI-compatible API",
            "llama.cpp - Lightweight C++ implementation",
            "Text Generation WebUI - Advanced web interface",
            "Custom - Custom API endpoint"
          ],
          "default": "ollama",
          "description": "Local LLM backend to use",
          "when": "config.naruhodocs.llm.provider == 'local'"
        },
        "naruhodocs.llm.localModel": {
          "type": "string",
          "default": "llama3.1:8b",
          "description": "Local model name for local LLM",
          "when": "config.naruhodocs.llm.provider == 'local'"
        },
        "naruhodocs.llm.localUrl": {
          "type": "string",
          "default": "http://localhost:11434",
          "description": "Local LLM server URL",
          "when": "config.naruhodocs.llm.provider == 'local'"
        }
      }
    },
    "viewsContainers": {
      "activitybar": [
        {
          "id": "naruhodocs-sidebar",
          "title": "NaruhoDocs",
          "icon": "media/icon.svg"
        }
      ]
    },
    "views": {
      "naruhodocs-sidebar": [
        {
          "id": "naruhodocs.chatView",
          "type": "webview",
          "name": "NaruhoDocs Chat"
        }
      ]
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run package",
    "compile": "npm run check-types && npm run lint && node esbuild.js",
    "watch": "npm-run-all -p watch:*",
    "watch:esbuild": "node esbuild.js --watch",
    "watch:tsc": "tsc --noEmit --watch --project tsconfig.json",
    "package": "npm run check-types && npm run lint && node esbuild.js --production",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "pretest": "npm run compile-tests && npm run compile && npm run lint",
    "check-types": "tsc --noEmit",
    "lint": "eslint src",
    "test": "vscode-test"
  },
  "devDependencies": {
    "@types/mocha": "^10.0.10",
    "@types/node": "22.x",
    "@types/node-fetch": "^2.6.13",
    "@types/sinon": "^17.0.4",
    "@types/vscode": "^1.103.0",
    "@typescript-eslint/eslint-plugin": "^8.39.0",
    "@typescript-eslint/parser": "^8.39.0",
    "@vscode/test-cli": "^0.0.11",
    "@vscode/test-electron": "^2.5.2",
    "esbuild": "^0.25.8",
    "eslint": "^9.32.0",
    "markdownlint": "^0.38.0",
    "npm-run-all": "^4.1.5",
    "sinon": "^21.0.0",
    "typescript": "^5.9.2"
  },
  "dependencies": {
    "@google/genai": "^1.16.0",
    "@langchain/community": "^0.3.54",
    "@langchain/core": "^0.3.72",
    "@langchain/google-genai": "^0.2.16",
    "@langchain/langgraph": "^0.4.9",
    "@langchain/openai": "^0.6.11",
    "dotenv": "^17.2.1",
    "langchain": "^0.3.31",
    "markdown-it": "^14.1.0",
    "node-fetch": "^3.3.2"
  }
}
